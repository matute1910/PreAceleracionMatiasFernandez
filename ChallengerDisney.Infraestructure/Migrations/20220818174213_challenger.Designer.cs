// <auto-generated />
using System;
using ChallengerDisney.Infraestructure.DataDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChallengerDisney.Infraestructure.Migrations
{
    [DbContext(typeof(DisneyContext))]
    [Migration("20220818174213_challenger")]
    partial class challenger
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ChallengerDisney.Core.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");
                        

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("ChallengerDisney.Core.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");
                        

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("ChallengerDisney.Core.Entities.MovieOrSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");
                        

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("MovieOrSeries");
                });

            modelBuilder.Entity("CharacterMovieOrSeries", b =>
                {
                    b.Property<int>("ListOfCharactersId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesOrAssociatedSeriesId")
                        .HasColumnType("int");

                    b.HasKey("ListOfCharactersId", "MoviesOrAssociatedSeriesId");

                    b.HasIndex("MoviesOrAssociatedSeriesId");

                    b.ToTable("CharacterMovieOrSeries");
                });

            modelBuilder.Entity("ChallengerDisney.Core.Entities.MovieOrSeries", b =>
                {
                    b.HasOne("ChallengerDisney.Core.Entities.Gender", null)
                        .WithMany("MoviesOrAssociatedSeries")
                        .HasForeignKey("GenderId");
                });

            modelBuilder.Entity("CharacterMovieOrSeries", b =>
                {
                    b.HasOne("ChallengerDisney.Core.Entities.Character", null)
                        .WithMany()
                        .HasForeignKey("ListOfCharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengerDisney.Core.Entities.MovieOrSeries", null)
                        .WithMany()
                        .HasForeignKey("MoviesOrAssociatedSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChallengerDisney.Core.Entities.Gender", b =>
                {
                    b.Navigation("MoviesOrAssociatedSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
